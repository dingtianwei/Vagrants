# apiserver
- name: "Generate apiserver private key"
  openssl_privatekey:
    path: "{{ cert.dir }}/{{ item }}/apiserver.key"
    type: RSA
    size: "{{ cert.size }}"
  with_items:
    - "{{ groups['master'] }}"

- name: "Generate apiserver request without loadbalance"
  openssl_csr:
    path: "{{ cert.dir }}/{{ item }}/apiserver.csr"
    privatekey_path: "{{ cert.dir }}/{{ item }}/apiserver.key"
    common_name: kube-apiserver
    use_common_name_for_san: no
    basic_constraints_critical: yes
    basic_constraints:
      - CA:FALSE
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - serverAuth
    subject_alt_name:
      - DNS:localhost
      - DNS:kubernetes
      - DNS:kubernetes.default
      - DNS:kubernetes.default.svc
      - DNS:kubernetes.default.svc.cluster
      - DNS:kubernetes.default.svc.cluster.local
      - DNS:{{ hostvars[item].dns_name}}
      - DNS:{{ hostvars[item].advertise}}
      - IP:127.0.0.1
      - IP:{{ hostvars[item].advertise }}
      - IP:{{ kubernetes.serviceSubnet | next_nth_usable(1) }}
  with_items:
    - "{{ groups['master'] }}"
  when: loadbalance.single  

- name: "Generate apiserver request with loadbalance"
  openssl_csr:
    path: "{{ cert.dir }}/{{ item }}/apiserver.csr"
    privatekey_path: "{{ cert.dir }}/{{ item }}/apiserver.key"
    common_name: kube-apiserver
    use_common_name_for_san: no
    basic_constraints_critical: yes
    basic_constraints:
      - CA:FALSE
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - serverAuth
    subject_alt_name:
      - DNS:localhost
      - DNS:kubernetes
      - DNS:kubernetes.default
      - DNS:kubernetes.default.svc
      - DNS:kubernetes.default.svc.cluster
      - DNS:kubernetes.default.svc.cluster.local
      - DNS:{% if 'domain_name' in loadbalance %}{{ loadbalance.domain_name }}{% else %}{{ loadbalance.ip }}{% endif %}
      - DNS:{{ hostvars[item].dns_name}}
      - DNS:{{ hostvars[item].advertise}}
      - IP:127.0.0.1
      - IP:{{ hostvars[item].advertise }}
      - IP:{{ kubernetes.serviceSubnet | next_nth_usable(1) }}
      - IP:{{ loadbalance.ip }}
  with_items:
    - "{{ groups['master'] }}"
  when: not loadbalance.single 

- name: "Generate apiserver certificate"
  openssl_certificate:
    path: "{{ cert.dir }}/{{ item }}/apiserver.pem"
    provider: ownca
    ownca_create_subject_key_identifier: never_create
    ownca_create_authority_key_identifier: no
    privatekey_path: "{{ cert.dir }}/{{ item }}/apiserver.key"
    csr_path: "{{ cert.dir }}/{{ item }}/apiserver.csr"
    ownca_path: "{{ cert.dir }}/ca.pem"
    ownca_privatekey_path: "{{ cert.dir }}/ca.key"
  with_items:
    - "{{ groups['master'] }}"

# apiserver-kubelet-client
- name: "Generate apiserver-kubelet-client private key"
  openssl_privatekey:
    path: "{{ cert.dir }}/{{ item }}/apiserver-kubelet-client.key"
    type: RSA
    size: "{{ cert.size }}"
  with_items:
    - "{{ groups['master'] }}"

- name: "Generate apiserver-kubelet-client request"
  openssl_csr:
    path: "{{ cert.dir }}/{{ item }}/apiserver-kubelet-client.csr"
    privatekey_path: "{{ cert.dir }}/{{ item }}/apiserver-kubelet-client.key"
    organization_name: system:masters
    common_name: kube-apiserver-kubelet-client
    use_common_name_for_san: no
    basic_constraints_critical: yes
    basic_constraints:
      - CA:FALSE
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - clientAuth
  with_items:
    - "{{ groups['master'] }}"

- name: "Generate apiserver-kubelet-client certificate"
  openssl_certificate:
    path: "{{ cert.dir }}/{{ item }}/apiserver-kubelet-client.pem"
    provider: ownca
    ownca_create_subject_key_identifier: never_create
    ownca_create_authority_key_identifier: no
    privatekey_path: "{{ cert.dir }}/{{ item }}/apiserver-kubelet-client.key"
    csr_path: "{{ cert.dir }}/{{ item }}/apiserver-kubelet-client.csr"
    ownca_path: "{{ cert.dir }}/ca.pem"
    ownca_privatekey_path: "{{ cert.dir }}/ca.key"
  with_items:
    - "{{ groups['master'] }}"

# admin
- name: "Generate admin private key"
  openssl_privatekey:
    path: "{{ cert.dir }}/{{ item }}/admin.key"
    type: RSA
    size: "{{ cert.size }}"
  with_items:
    - "{{ groups['master'] }}"

- name: "Generate admin request"
  openssl_csr:
    path: "{{ cert.dir }}/{{ item }}/admin.csr"
    privatekey_path: "{{ cert.dir }}/{{ item }}/admin.key"
    organization_name: system:masters
    common_name: kubernetes-admin
    basic_constraints_critical: yes
    basic_constraints:
      - CA:FALSE
    use_common_name_for_san: no
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - clientAuth
  with_items:
    - "{{ groups['master'] }}"

- name: "Generate admin certificate"
  openssl_certificate:
    path: "{{ cert.dir }}/{{ item }}/admin.pem"
    provider: ownca
    ownca_create_subject_key_identifier: never_create
    ownca_create_authority_key_identifier: no
    privatekey_path: "{{ cert.dir }}/{{ item }}/admin.key"
    csr_path: "{{ cert.dir }}/{{ item }}/admin.csr"
    ownca_path: "{{ cert.dir }}/ca.pem"
    ownca_privatekey_path: "{{ cert.dir }}/ca.key"
  with_items:
    - "{{ groups['master'] }}"

# controller-manager
- name: "Generate controller-manager private key"
  openssl_privatekey:
    path: "{{ cert.dir }}/{{ item }}/controller-manager.key"
    type: RSA
    size: "{{ cert.size }}"
  with_items:
    - "{{ groups['master'] }}"

- name: "Generate controller-manager request"
  openssl_csr:
    path: "{{ cert.dir }}/{{ item }}/controller-manager.csr"
    privatekey_path: "{{ cert.dir }}/{{ item }}/controller-manager.key"
    common_name: system:kube-controller-manager
    use_common_name_for_san: no
    basic_constraints_critical: yes
    basic_constraints:
      - CA:FALSE
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - clientAuth
  with_items:
    - "{{ groups['master'] }}"

- name: "Generate controller-manager certificate"
  openssl_certificate:
    path: "{{ cert.dir }}/{{ item }}/controller-manager.pem"
    provider: ownca
    ownca_create_subject_key_identifier: never_create
    ownca_create_authority_key_identifier: no
    privatekey_path: "{{ cert.dir }}/{{ item }}/controller-manager.key"
    csr_path: "{{ cert.dir }}/{{ item }}/controller-manager.csr"
    ownca_path: "{{ cert.dir }}/ca.pem"
    ownca_privatekey_path: "{{ cert.dir }}/ca.key"
  with_items:
    - "{{ groups['master'] }}"

# scheduler
- name: "Generate scheduler private key"
  openssl_privatekey:
    path: "{{ cert.dir }}/{{ item }}/scheduler.key"
    type: RSA
    size: "{{ cert.size }}"
  with_items:
    - "{{ groups['master'] }}"

- name: "Generate scheduler request"
  openssl_csr:
    path: "{{ cert.dir }}/{{ item }}/scheduler.csr"
    privatekey_path: "{{ cert.dir }}/{{ item }}/scheduler.key"
    common_name: system:kube-scheduler
    use_common_name_for_san: no
    basic_constraints_critical: yes
    basic_constraints:
      - CA:FALSE
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - clientAuth
  with_items:
    - "{{ groups['master'] }}"

- name: "Generate scheduler certificate"
  openssl_certificate:
    path: "{{ cert.dir }}/{{ item }}/scheduler.pem"
    provider: ownca
    ownca_create_subject_key_identifier: never_create
    ownca_create_authority_key_identifier: no
    privatekey_path: "{{ cert.dir }}/{{ item }}/scheduler.key"
    csr_path: "{{ cert.dir }}/{{ item }}/scheduler.csr"
    ownca_path: "{{ cert.dir }}/ca.pem"
    ownca_privatekey_path: "{{ cert.dir }}/ca.key"
  with_items:
    - "{{ groups['master'] }}"

# kube-proxy
- name: "Generate kube-proxy private key"
  openssl_privatekey:
    path: "{{ cert.dir }}/{{ item }}/kube-proxy.key"
    type: RSA
    size: "{{ cert.size }}"
  with_items:
    - "{{ groups['master'] }}"
    - "{{ groups['node'] }}"

- name: "Generate kube-proxy request"
  openssl_csr:
    path: "{{ cert.dir }}/{{ item }}/kube-proxy.csr"
    privatekey_path: "{{ cert.dir }}/{{ item }}/kube-proxy.key"
    common_name: system:kube-proxy
    use_common_name_for_san: no
    basic_constraints_critical: yes
    basic_constraints:
      - CA:FALSE
    key_usage_critical: yes
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - clientAuth
  with_items:
    - "{{ groups['master'] }}"
    - "{{ groups['node'] }}"

- name: "Generate kube-proxy certificate"
  openssl_certificate:
    path: "{{ cert.dir }}/{{ item }}/kube-proxy.pem"
    provider: ownca
    ownca_create_subject_key_identifier: never_create
    ownca_create_authority_key_identifier: no
    privatekey_path: "{{ cert.dir }}/{{ item }}/kube-proxy.key"
    csr_path: "{{ cert.dir }}/{{ item }}/kube-proxy.csr"
    ownca_path: "{{ cert.dir }}/ca.pem"
    ownca_privatekey_path: "{{ cert.dir }}/ca.key"
  with_items:
    - "{{ groups['master'] }}"
    - "{{ groups['node'] }}"
